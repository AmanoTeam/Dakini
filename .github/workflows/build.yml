name: Build

on:
  push:
    branches:
        - '**'

jobs:
  native-build:
    name: 'Native build'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
      with:
        submodules: true
    - name: Build Dakini
      run: |
        bash './build.sh' 'native'
    - name: Generate tarball
      run: |
        declare tarball_filename='/tmp/x86_64-linux-gnu.tar.xz'
        tar --directory='/tmp' --create --file=- 'dakini' | xz --threads='0' --compress -9 > "${tarball_filename}"
        sha256sum "${tarball_filename}" | sed 's|/tmp/||' > "${tarball_filename}.sha256"
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: native-toolchain
        if-no-files-found: error
        path: |
          /tmp/x86_64-linux-gnu.tar.xz
          /tmp/x86_64-linux-gnu.tar.xz.sha256
  
  cross-build:
    name: 'Cross build'
    needs: native-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          'alpha-unknown-linux-gnu',
          'x86_64-unknown-linux-gnu',
          'i386-unknown-linux-gnu',
          'arm-unknown-linux-gnueabi',
          'arm-unknown-linux-gnueabihf',
          'hppa-unknown-linux-gnu',
          'aarch64-unknown-linux-gnu',
          'mips-unknown-linux-gnu',
          'mipsel-unknown-linux-gnu',
          'powerpc-unknown-linux-gnu',
          's390-unknown-linux-gnu',
          's390x-unknown-linux-gnu',
          'sparc-unknown-linux-gnu',
          'powerpc64le-unknown-linux-gnu'
        ]
    steps:
    - uses: actions/checkout@main
      with:
        submodules: true
    - name: Download artifact
      uses: actions/download-artifact@main
      with:
        name: native-toolchain
    - name: Setup toolchain
      run: |
        tar --directory='/tmp' --extract --file='./x86_64-linux-gnu.tar.xz'
        mv '/tmp/dakini' '/tmp/dakini-toolchain'
    - name: Build Dakini with OBGGCC
      run: |
        source './tools/setup_toolchain.sh'
        source './submodules/obggcc/tools/setup_toolchain.sh'
        
        bash './build.sh' '${{ matrix.target }}'
    - name: Generate tarball
      run: |
        declare tarball_filename='/tmp/${{ matrix.target }}.tar.xz'
        tar --directory='/tmp' --create --file=- 'dakini' | xz --threads='0' --compress -9 > "${tarball_filename}"
        sha256sum "${tarball_filename}" | sed 's|/tmp/||' > "${tarball_filename}.sha256"
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: cross-toolchain
        if-no-files-found: error
        path: |
          /tmp/${{ matrix.target }}.tar.xz
          /tmp/${{ matrix.target }}.tar.xz.sha256
